name: 'Build Extension'

runs:
  using: "composite"
  steps:
    - name: Build Extension
      run: |
        # Function to compare versions correctly
        version_le() {
          printf "%s\n%s" "$1" "$2" | sort -V | head -n1 | grep -q "^$1$"
        }
        # Use gcc-9 for versions prior to 14.18, 15.13, 16.9 and 17.5
        engine_version="${{ inputs.engine_version }}"
        if [[ "$engine_version" != "source.latest" && "$engine_version" != "target.latest" ]] && 
          ( version_le "$engine_version" "14.17" || 
            ( [[ "${engine_version%%.*}" == "15" ]] && version_le "$engine_version" "15.12" ) || 
            ( [[ "${engine_version%%.*}" == "16" ]] && version_le "$engine_version" "16.8" ) || 
            ( [[ "${engine_version%%.*}" == "17" ]] && version_le "$engine_version" "17.4" ) ); then
          export CC='ccache gcc-9'
        else
          export CC='ccache gcc'
        fi

        export PG_CONFIG=${{env.PG_CONFIG}}
        export PG_SRC=${{env.PG_SRC}}
        export cmake=$(which cmake)
        pwd
        cd ${{env.PG_SRC}}/contrib
        for ext in babelfishpg_common babelfishpg_money babelfishpg_tds babelfishpg_tsql 
        do
            cd $ext
            make -j ${JOBS}
            sudo make PG_CONFIG=${{env.PG_CONFIG}} install
            cd ..
        done
      shell: bash